#!/usr/bin/env ansible-playbook
---
- name: Manage mysql database
  hosts: localhost
  gather_facts: no

  vars:
    state: present
    drop_on_delete: false

  tasks:
  - name: get mysql cluster
    k8s_facts:
      api_version: mysql.operator.luktom.net/v1
      kind: MysqlCluster
      name: "{{ cluster_ref.name }}"
    register: cluster_reg

  - set_fact:
      cluster: "{{ cluster_reg.resources | first }}"

  - debug:
      var: cluster

  - name: get mysql cluster credentials
    k8s_facts:
      api_version: v1
      kind: Secret
      name: "{{ cluster.spec.secretRef.name }}"
      namespace: "{{ cluster.spec.secretRef.namespace }}"
    register: cluster_secret_reg

  - set_fact:
      cluster_secret: "{{ cluster_secret_reg.resources | first }}"

  - name: set status
    k8s_status:
      api_version: mysql.operator.luktom.net/v1
      kind: MysqlDatabase
      name: "{{ meta.name }}"
      namespace: "{{ meta.namespace }}"
      status:
        stage: "creating"

  - name: create database
    mysql_db:
      login_host: "{{ cluster.spec.host }}"
      login_user: "{{ cluster.spec.username }}"
      login_password: "{{ cluster_secret.data.password | b64decode }}"
      name: "{{ meta.name }}"
    when: state == "present"

  - name: set status
    k8s_status:
      api_version: mysql.operator.luktom.net/v1
      kind: MysqlDatabase
      name: "{{ meta.name }}"
      namespace: "{{ meta.namespace }}"
      status:
        created: true
    when: state == "present"

  - name: delete database
    mysql_db:
      login_host: "{{ cluster.spec.host }}"
      login_user: "{{ cluster.spec.username }}"
      login_password: "{{ cluster_secret.data.password | b64decode }}"
      name: "{{ meta.name }}"
      state: absent
    when: state == "absent" and drop_on_delete